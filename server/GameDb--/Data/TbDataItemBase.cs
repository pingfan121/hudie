using System.Collections.Generic;using System.Collections;using GameLib.game;using GameServer.Define.EnumNormal;namespace GameDb.Data{	public class TbDataItemBase{		/**		* 编号		*/		public int Id;		/**		* 名称		*/		public string Name;		/**		* 图标		*/		public string Icon;		/**		* 掉落模型ID		*/		public string DropIcon;		/**		* 男内观ID		*/		public string MaleInIcon;		/**		* 女内观ID		*/		public string FemaleInIcon;		/**		* 男模型ID		*/		public int MaleResId;		/**		* 女模型ID		*/		public int FemaleResId;		/**		* 骑马男形象		*/		public int MaleRidingResId;		/**		* 骑马女形象		*/		public int FemaleRidingResId;		/**		* 内观宽度		*/		public int InIconWidth;		/**		* 内观高度		*/		public int InIconHeight;		/**		* 职业限制		*/		public int JOB;		/**		* 装备组		*/		public int Team;		/**		* 转生等级限制		*/		public int RELev;		/**		* 等级限制		*/		public int Needlev;		/**		* 特殊限制		*/		public int NeedType;		/**		* 特殊限制值		*/		public int NeedValue;		/**		* 物品品质		*/		public int ItemQuality;		/**		* 物品背包显示类型		*/		public int ItemBagtype;		/**		* 物品类别1		*/		public int Itemtype1;		/**		* 物品类别2		*/		public int Itemtype2;		/**		* 物品类别3		*/		public int Itemtype3;		/**		* 所需性别		*/		public int SEX;		/**		* 部位		*/		public int Equippos;		/**		* 掉耐久类型		*/		public int EquipType;		/**		* 出售价格		*/		public int Sellprice;		/**		* 修理费用		*/		public int RepairPrice;		/**		* 回收经验		*/		public int ReEXP;		/**		* 回收金币		*/		public int ReGold;		/**		* 回收血符		*/		public int ReLife;		/**		* 帮会贡献		*/		public int Donate;		/**		* 叠加上限		*/		public int Stacks;		/**		* 持有类型		*/		public int HoldAttr;		/**		* 是否可销毁		*/		public bool CanDestroy;		/**		* 是否可使用		*/		public int UseType;		/**		* 是否可放入仓库		*/		public int SaveType;		/**		* 使用次数		*/		public int UseCount;		/**		* 最大注灵等级		*/		public int SoulMaxLevel;		/**		* 最大强化等级		*/		public int StrengthenMaxLevel;		/**		* 是否可魂装铸造		*/		public int CanCast;		/**		* 是否可合成		*/		public int CanCompound;		/**		* 是否可开光		*/		public int CanRecast;		/**		* 是否可推送		*/		public bool CanPush;		/**		* 是否展示		*/		public int CanShow;		/**		* CD类别		*/		public int CdType;		/**		* 公共CD		*/		public int PublicCDTime;		/**		* CD时间		*/		public int CdTime;		/**		* 有效时间		*/		public int ValidTime;		/**		* 耐久度		*/		public int Maxdur;		/**		* 最小物攻		*/		public int MinATK;		/**		* 最大物攻		*/		public int MaxATK;		/**		* 最小法攻		*/		public int MinMATK;		/**		* 最大法攻		*/		public int MaxMATK;		/**		* 最小道攻		*/		public int MinSATK;		/**		* 最大道攻		*/		public int MaxSATK;		/**		* 最小物防		*/		public int MinDEF;		/**		* 最大物防		*/		public int MaxDEF;		/**		* 最小法防		*/		public int MinMDEF;		/**		* 最大法防		*/		public int MaxMDEF;		/**		* 幸运		*/		public int Luck;		/**		* 当前血量		*/		public int CurHP;		/**		* 当前魔力		*/		public int CurMP;		/**		* 血量上限		*/		public int MaxHP;		/**		* 魔力上限		*/		public int MaxMP;		/**		* 内功		*/		public int NeiGong;		/**		* 命中		*/		public int HIT;		/**		* 闪避		*/		public int DODGE;		/**		* 暴击率		*/		public int CRIRate;		/**		* 暴击值		*/		public int CrateVal;		/**		* 抗暴击		*/		public int DUCrate;		/**		* 伤害增加		*/		public int DMGrate;		/**		* 免伤		*/		public int DTR;		/**		* 打怪伤害增加		*/		public int DTM;		/**		* 物理攻击减免		*/		public int ADTR;		/**		* 魔法减免		*/		public int MR;		/**		* 麻痹概率		*/		public int PAC;		/**		* 护身比例		*/		public int ARMC;		/**		* 目标类型		*/		public int TargetType;		/**		* 合法对象		*/		public int ValidTarget;		/**		* buffID		*/		public int BuffID;		/**		* 附加功能ID		*/		public int Funcid;		/**		* 功能参数		*/		public int[] Funcparams;		/**		* 类型		*/		public string Typestring;		/**		* 客户端功能ID		*/		public int ClientFunctionId;		/**		* 客户端功能参数		*/		public string[] ClientFunctionParams;		/**		* 是否可放入快捷栏		*/		public bool CanSetShortcut;		/**		* 物品背包闪烁		*/		public bool IsShowUse;		/**		* 播放音效		*/		public int PlaySound;		/**		* 播放特效		*/		public int PlayUseEffect;		/**		* 描述		*/		public string Desc;		/**		* 掉落说明		*/		public string Dropdesc;		/**		* 使用说明		*/		public string Help;		/**		* 默认绑定状态		*/		public bool StartBind;		/**		* 是否设定为副本专属		*/		public bool IsCopyed;		static public Dictionary<int, TbDataItemBase> temples=new Dictionary<int,TbDataItemBase>();		static public void initdata(Dictionary<int,Hashtable> table){			foreach(Hashtable tb in table.Values){			try{				TbDataItemBase tp=new TbDataItemBase();				temples[(int)tb["Id"]] = tp;				tp.Id=(int)tb["Id"];				tp.Name=(string)tb["Name"];				tp.Icon=(string)tb["Icon"];				tp.DropIcon=(string)tb["DropIcon"];				tp.MaleInIcon=(string)tb["MaleInIcon"];				tp.FemaleInIcon=(string)tb["FemaleInIcon"];				tp.MaleResId=(int)tb["MaleResId"];				tp.FemaleResId=(int)tb["FemaleResId"];				tp.MaleRidingResId=(int)tb["MaleRidingResId"];				tp.FemaleRidingResId=(int)tb["FemaleRidingResId"];				tp.InIconWidth=(int)tb["InIconWidth"];				tp.InIconHeight=(int)tb["InIconHeight"];				tp.JOB=(int)tb["JOB"];				tp.Team=(int)tb["Team"];				tp.RELev=(int)tb["RELev"];				tp.Needlev=(int)tb["Needlev"];				tp.NeedType=(int)tb["NeedType"];				tp.NeedValue=(int)tb["NeedValue"];				tp.ItemQuality=(int)tb["ItemQuality"];				tp.ItemBagtype=(int)tb["ItemBagtype"];				tp.Itemtype1=(int)tb["Itemtype1"];				tp.Itemtype2=(int)tb["Itemtype2"];				tp.Itemtype3=(int)tb["Itemtype3"];				tp.SEX=(int)tb["SEX"];				tp.Equippos=(int)tb["Equippos"];				tp.EquipType=(int)tb["EquipType"];				tp.Sellprice=(int)tb["Sellprice"];				tp.RepairPrice=(int)tb["RepairPrice"];				tp.ReEXP=(int)tb["ReEXP"];				tp.ReGold=(int)tb["ReGold"];				tp.ReLife=(int)tb["ReLife"];				tp.Donate=(int)tb["Donate"];				tp.Stacks=(int)tb["Stacks"];				tp.HoldAttr=(int)tb["HoldAttr"];				tp.CanDestroy=(bool)tb["CanDestroy"];				tp.UseType=(int)tb["UseType"];				tp.SaveType=(int)tb["SaveType"];				tp.UseCount=(int)tb["UseCount"];				tp.SoulMaxLevel=(int)tb["SoulMaxLevel"];				tp.StrengthenMaxLevel=(int)tb["StrengthenMaxLevel"];				tp.CanCast=(int)tb["CanCast"];				tp.CanCompound=(int)tb["CanCompound"];				tp.CanRecast=(int)tb["CanRecast"];				tp.CanPush=(bool)tb["CanPush"];				tp.CanShow=(int)tb["CanShow"];				tp.CdType=(int)tb["CdType"];				tp.PublicCDTime=(int)tb["PublicCDTime"];				tp.CdTime=(int)tb["CdTime"];				tp.ValidTime=(int)tb["ValidTime"];				tp.Maxdur=(int)tb["Maxdur"];				tp.MinATK=(int)tb["MinATK"];				tp.MaxATK=(int)tb["MaxATK"];				tp.MinMATK=(int)tb["MinMATK"];				tp.MaxMATK=(int)tb["MaxMATK"];				tp.MinSATK=(int)tb["MinSATK"];				tp.MaxSATK=(int)tb["MaxSATK"];				tp.MinDEF=(int)tb["MinDEF"];				tp.MaxDEF=(int)tb["MaxDEF"];				tp.MinMDEF=(int)tb["MinMDEF"];				tp.MaxMDEF=(int)tb["MaxMDEF"];				tp.Luck=(int)tb["Luck"];				tp.CurHP=(int)tb["CurHP"];				tp.CurMP=(int)tb["CurMP"];				tp.MaxHP=(int)tb["MaxHP"];				tp.MaxMP=(int)tb["MaxMP"];				tp.NeiGong=(int)tb["NeiGong"];				tp.HIT=(int)tb["HIT"];				tp.DODGE=(int)tb["DODGE"];				tp.CRIRate=(int)tb["CRIRate"];				tp.CrateVal=(int)tb["CrateVal"];				tp.DUCrate=(int)tb["DUCrate"];				tp.DMGrate=(int)tb["DMGrate"];				tp.DTR=(int)tb["DTR"];				tp.DTM=(int)tb["DTM"];				tp.ADTR=(int)tb["ADTR"];				tp.MR=(int)tb["MR"];				tp.PAC=(int)tb["PAC"];				tp.ARMC=(int)tb["ARMC"];				tp.TargetType=(int)tb["TargetType"];				tp.ValidTarget=(int)tb["ValidTarget"];				tp.BuffID=(int)tb["BuffID"];				tp.Funcid=(int)tb["Funcid"];				tp.Funcparams=(int[])tb["Funcparams"];				tp.Typestring=(string)tb["Typestring"];				tp.ClientFunctionId=(int)tb["ClientFunctionId"];				tp.ClientFunctionParams=(string[])tb["ClientFunctionParams"];				tp.CanSetShortcut=(bool)tb["CanSetShortcut"];				tp.IsShowUse=(bool)tb["IsShowUse"];				tp.PlaySound=(int)tb["PlaySound"];				tp.PlayUseEffect=(int)tb["PlayUseEffect"];				tp.Desc=(string)tb["Desc"];				tp.Dropdesc=(string)tb["Dropdesc"];				tp.Help=(string)tb["Help"];				tp.StartBind=(bool)tb["StartBind"];				tp.IsCopyed=(bool)tb["IsCopyed"];			}catch(System.Exception ee){				System.Console.WriteLine(ee);			}			}		}	static public TbDataItemBase select(int id) {		if (temples.ContainsKey(id)) {			return temples[id];		}		return null;	}	}}