using System.Collections.Generic;using System.Collections;using GameLib.game;using GameServer.Define.EnumNormal;namespace GameDb.Data{	public class TbDataUnitPetLevel{		/**		* ID		*/		public int Id;		/**		* 等级		*/		public int Level;		/**		* 单位ID		*/		public int MonsterID;		/**		* 名称		*/		public string Name;		/**		* 升级所需经验		*/		public int Exp;		/**		* 血量		*/		public int MaxHp;		/**		* 法术攻击系数		*/		public int MATKRate;		/**		* 法术攻击附加值		*/		public int MATKAdd;		/**		* 物理防御系数		*/		public int DEFRate;		/**		* 物理防御偏移值		*/		public int DEFAdd;		/**		* 法术防御系数		*/		public int MDEFRate;		/**		* 法术防御附加值		*/		public int MDEFAdd;		static public Dictionary<int, TbDataUnitPetLevel> temples=new Dictionary<int,TbDataUnitPetLevel>();		static public void initdata(Dictionary<int,Hashtable> table){			foreach(Hashtable tb in table.Values){			try{				TbDataUnitPetLevel tp=new TbDataUnitPetLevel();				temples[(int)tb["Id"]] = tp;				tp.Id=(int)tb["Id"];				tp.Level=(int)tb["Level"];				tp.MonsterID=(int)tb["MonsterID"];				tp.Name=(string)tb["Name"];				tp.Exp=(int)tb["Exp"];				tp.MaxHp=(int)tb["MaxHp"];				tp.MATKRate=(int)tb["MATKRate"];				tp.MATKAdd=(int)tb["MATKAdd"];				tp.DEFRate=(int)tb["DEFRate"];				tp.DEFAdd=(int)tb["DEFAdd"];				tp.MDEFRate=(int)tb["MDEFRate"];				tp.MDEFAdd=(int)tb["MDEFAdd"];			}catch(System.Exception ee){				System.Console.WriteLine(ee);			}			}		}	static public TbDataUnitPetLevel select(int id) {		if (temples.ContainsKey(id)) {			return temples[id];		}		return null;	}	}}